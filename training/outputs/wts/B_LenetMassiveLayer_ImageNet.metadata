B_LenetMassiveLayer_ImageNet(
  (backbone): ModuleList(
    (0): Sequential(
      (0): Conv2d(3, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
      (1): ReLU(inplace=True)
    )
    (1): Sequential(
      (0): Conv2d(256, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): Conv2d(5, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU(inplace=True)
      (4): Conv2d(256, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU(inplace=True)
      (6): Conv2d(5, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU(inplace=True)
      (8): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (9): ReLU(inplace=True)
      (10): MaxPool2d(kernel_size=8, stride=8, padding=0, dilation=1, ceil_mode=False)
      (11): Flatten(start_dim=1, end_dim=-1)
    )
  )
  (exits): ModuleList(
    (0): Sequential(
      (0): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU(inplace=True)
      (4): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU(inplace=True)
      (6): MaxPool2d(kernel_size=8, stride=8, padding=0, dilation=1, ceil_mode=False)
      (7): Flatten(start_dim=1, end_dim=-1)
      (8): Linear(in_features=2352, out_features=1000, bias=False)
    )
    (1): Sequential(
      (0): Linear(in_features=2352, out_features=1000, bias=False)
    )
  )
)